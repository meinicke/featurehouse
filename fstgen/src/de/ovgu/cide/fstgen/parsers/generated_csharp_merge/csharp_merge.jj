options {
	STATIC = false;
	ERROR_REPORTING = true;
	UNICODE_INPUT = true;
}


PARSER_BEGIN(CSharpMergeParser)									// adapted from csharp_fst.gcide

package de.ovgu.cide.fstgen.parsers.generated_csharp_merge;								// adapted from csharp_fst.gcide
import java.io.*;
import java.util.*;
import cide.gast.*;
import cide.gparser.*;
import de.ovgu.cide.fstgen.ast.*;

public class CSharpMergeParser extends AbstractFSTParser {		// adapted from csharp_fst.gcide
	public CSharpMergeParser() {}								// adapted from csharp_fst.gcide
}

PARSER_END(CSharpMergeParser)									// adapted from csharp_fst.gcide

SPECIAL_TOKEN : {
	" "
	|  "\t"
	|  "\n"
	|  "\r"
	|  <"//" (~["\n","\r"])* ("\n" | "\r" | "\r\n")>
	|  <"/*" (~["*"])* "*" ("*" | ~["*","/"] (~["*"])* "*")* "/">
}


TOKEN : {
	<ABSTRACT	:	"abstract">
	|  <LONG		:	"long">
	|  <AS			:	"as">
	|  <NAMESPACE	:	"namespace">
	|  <BASE		:	"base">
	|  <NEW			:	"new">
	|  <BOOL		:	"bool">
	|  <NULL		:	"null">
	|  <BREAK		:	"break">
	|  <OBJECT		:	"object">
	|  <BYTE		:	"byte">
	|  <OPERATOR	:	"operator">
	|  <CASE		:	"case">
	|  <OUT			:	"out">
	|  <CATCH		:	"catch">
	|  <OVERRIDE	:	"override">
	|  <CHAR		:	"char">
	|  <PARAMS		:	"params">
	|  <CHECKED		:	"checked">
	|  <PRIVATE		:	"private">
	|  <CLASS		:	"class">
	|  <PROTECTED	:	"protected">
	|  <CONST		:	"const">
	|  <PUBLIC		:	"public">
	|  <CONTINUE	:	"continue">
	|  <READONLY	:	"readonly">
	|  <DECIMAL		:	"decimal">
	|  <REF			:	"ref">
	|  <DEFAULTTOKEN		:	"default">
	|  <RETURN		:	"return">
	|  <DELEGATE	:	"delegate">
	|  <SBYTE		:	"sbyte">
	|  <DO			:	"do">
	|  <SEALED		:	"sealed">
	|  <DOUBLE		:	"double">
	|  <SHORT		:	"short">
	|  <ELSE		:	"else">
	|  <SIZEOF		:	"sizeof">
	|  <ENUM		:	"enum">
	|  <STACKALLOC	:	"stackalloc">
	|  <EVENT		:	"event">
	|  <STATIC		:	"static">
	|  <EXPLICIT	:	"explicit">
	|  <STRING		:	"string">
	|  <EXTERN		:	"extern">
	|  <STRUCT		:	"struct">
	|  <FALSE		:	"false">
	|  <SWITCH		:	"switch">
	|  <FINALLY		:	"finally">
	|  <THIS		:	"this">
	|  <FIXED		:	"fixed">
	|  <THROW		:	"throw">
	|  <FLOAT		:	"float">
	|  <TRUE		:	"true">
	|  <FOR			:	"for">
	|  <TRY			:	"try">
	|  <FOREACH		:	"foreach">
	|  <TYPEOF		:	"typeof">
	|  <GOTO		:	"goto">
	|  <UINT		:	"uint">
	|  <IF			:	"if">
	|  <ULONG		:	"ulong">
	|  <IMPLICIT	:	"implicit">
	|  <UNCHECKED	:	"unchecked">
	|  <IN			:	"in">
	|  <UNSAFE		:	"unsafe">
	|  <INT			:	"int">
	|  <USHORT		:	"ushort">
	|  <INTERFACE	:	"interface">
	|  <USING		:	"using">
	|  <INTERNAL	:	"internal">
	|  <VIRTUAL		:	"virtual">
	|  <IS			:	"is">
	|  <VOID		:	"void">
	|  <LOCK		:	"lock">
	|  <WHILE		:	"while">
	|  <VOLATILE	:	"volatile">
	|  <WHERE 		:	"where">
	|  <ASSEMBLY	:	"assembly">
	|  <MODULE		:	"module">
	|  <PARTIAL		:	"partial">
	|  <YIELD		:   "yield">		// introduce yield as a pseudo keyword see IDENTIFIER_CSHARP for more information
	|  <LET         :   "let">          // introduce let as a pseudo keyword see IDENTIFIER_CSHARP for more information
	|  <BY          :   "by">           // introduce by as a pseudo keyword see IDENTIFIER_CSHARP for more information
	|  <FROM		:   "from">			// introduce from as a pseudo keyword see IDENTIFIER_CSHARP for more information
	|  <INTO		:   "into">			// introduce into as a pseudo keyword see IDENTIFIER_CSHARP for more information
	|  <GROUP		:   "group">		// introduce group as a pseudo keyword see IDENTIFIER_CSHARP for more information
	|  <SELECT		:	"select">		// introduce select as a pseudo keyword see IDENTIFIER_CSHARP for more information
}

TOKEN : {
	<DOT		:	"."		>
	|  <LBRACE		:	"{"		>
	|  <RBRACE		:	"}"		>
	|  <LBRACK		:	"["		>
	|  <RBRACK		:	"]"		>
	|  <LPAREN		:	"("		>
	|  <RPAREN		:	")"		>
	|  <PLUS		:	"+"		>
	|  <PLUS_ASN	:	"+="	>
	|  <MINUS		:	"-"		>
	|  <MINUS_ASN	:	"-="	>
	|  <STAR		:	"*"		>
	|  <STAR_ASN	:	"*="	>
	|  <DIV			:	"/"		>
	|  <DIV_ASN		:	"/="	>
	|  <MOD			:	"%"		>
	|  <MOD_ASN		:	"%="	>
	|  <INC			:	"++"	>
	|  <DEC			:	"--"	>
	|  <SL			:	"<<"	>
	|  <SL_ASN		:	"<<="	>
	|  <SR			:	">>"	>
	|  <SR_ASN		:	">>="	>
	|  <BSR			:	">>>"	>
	|  <BSR_ASN		:	">>>="	>
	|  <AMPER		:	"&"		>
	|  <BAND_ASN	:	"&="	>
	|  <BOR			:	"|"		>
	|  <BOR_ASN		:	"|="	>
	|  <CARET		:	"^"		>
	|  <BXOR_ASN	:	"^="	>
	|  <TILDE		:	"~"		>
	|  <ASSIGN		:	"="		>
	|  <EQUAL		:	"=="	>
	|  <LTHAN		:	"<"		>
	|  <LE			:	"<="	>
	|  <GTHAN		:	">"		>
	|  <GE			:	">="	>
	|  <BANG		:	"!"		>
	|  <NOT_EQUAL	:	"!="	>
	|  <LOR			:	"||"	>
	|  <LAND		:	"&&"	>
	|  <COMMA		:	","		>
	|  <COLON		:	":"		>
	|  <SEMI		:	";"		>
	|  <HASH		:	"#"     >
	|  <QUOTE		:	"\""	>
	|  <QMARK		:	"?"		>
	|  <QMARKS		:	"??"	>
	|  <ARROW		:	"->"	>
	|  <ANONFUNC	:	"=>"	>
}

TOKEN : {
	<#UNICODE_ESCAPE_SEQUENCE
		:  ("\\" "u"   <HEX_DIGIT>   <HEX_DIGIT>   <HEX_DIGIT>  <HEX_DIGIT>
		|  "\\" "U"   <HEX_DIGIT>   <HEX_DIGIT>   <HEX_DIGIT>  <HEX_DIGIT>  <HEX_DIGIT>   <HEX_DIGIT>   <HEX_DIGIT>  <HEX_DIGIT>)>
	|  <IDENTIFIER: <IDENTIFIER_START_CHARACTER> (<IDENTIFIER_PART_CHARACTER>)*>
		|  <#IDENTIFIER_START_CHARACTER:	["a"-"z","A"-"Z","_","$","@"]>	
		|  <#IDENTIFIER_PART_CHARACTER:	["a"-"z","A"-"Z","0"-"9","_","$","/","?"]>	
		|  <NUMERIC_LITERAL:"."(<DECIMAL_DIGIT>)(<DECIMAL_DIGIT>)*(<EXPONENT_PART>)?(<REAL_TYPE_SUFFIX>)?
		|  (<DECIMAL_DIGIT>)+ ("." (<DECIMAL_DIGIT>)+ (<EXPONENT_PART>)? (<REAL_TYPE_SUFFIX>)?
		|  (<EXPONENT_PART>) (<REAL_TYPE_SUFFIX>)?
		|  (<REAL_TYPE_SUFFIX>)
		|  (<INTEGER_TYPE_SUFFIX>)?)>
	|	<HEXADECIMAL_INTEGER_LITERAL:	("0x"|"0X")   (<HEX_DIGIT>)+   (<INTEGER_TYPE_SUFFIX>)?	>
	|	<CHARACTER_LITERAL	:	"'"   <CHARACTER>   "'">
	|	<REGULAR_STRING_LITERAL	:	"\""  (<REGULAR_STRING_LITERAL_CHARACTER>)* "\"">
	|	<VERBATIM_STRING_LITERAL:	 "@" "\""  	
		(	"\"\""		
		|	"\\"		
		| "\r"
		| "\n"
		| "\u2028"
		| "\u2029"
		|  ~["\"","\\","\r","\n","\u2028","\u2029"]	
		)* 
		"\"">
	|	<#DECIMAL_DIGIT
	: 	["0"	,	"1"	,	"2"	,	"3"	,	"4"	,	"5"	,	"6"	,	"7"	,	"8"	,	"9"]>
	| 	<#INTEGER_TYPE_SUFFIX: 	(	"UL"	| "LU" 	| "ul"	| "lu"
		|	"UL"	| "LU" 	| "uL"	| "lU"
		|	"U"		| "L"	| "u"	| "l")>
	|	<#HEX_DIGIT	:	["0" , "1" , "2" , "3" , "4" , "5" , "6" , "7" , "8" , "9" , 
		"A" , "B" , "C" , "D" , "E" , "F"  ,
		"a" , "b" , "c" , "d" , "e" , "f"]>	
	|	<#EXPONENT_PART:	("e"  (<SIGN>)*  (<DECIMAL_DIGIT>)+ 	|	"E"  (<SIGN>)*  (<DECIMAL_DIGIT>)+)>
	|	<#SIGN	: ["+" , "-" ]>
	|	<#REAL_TYPE_SUFFIX	: ["F" , "f" , "D" , "d" , "M" , "m"]>
	|	<#CHARACTER:	(<SINGLE_CHARACTER>	|	<SIMPLE_ESCAPE_SEQUENCE>
	|	<HEXADECIMAL_ESCAPE_SEQUENCE>
	|	<UNICODE_ESCAPE_SEQUENCE>	)>
	|	<SINGLE_CHARACTER:~["\\","\'","\r", "\n", "\u2028", "\u2029"]>
	|	<#SIMPLE_ESCAPE_SEQUENCE: (
		"\\'" | "\\\"" | "\\\\" | "\\0" | "\\a"  
	|	"\\b" | "\\f"  | "\\n"  | "\\r" | "\\t" | "\\v")>
	|	<#HEXADECIMAL_ESCAPE_SEQUENCE: "\\" "x" <HEX_DIGIT> (<HEX_DIGIT>(<HEX_DIGIT>(<HEX_DIGIT>)?)?)?>
	|	<REGULAR_STRING_LITERAL_CHARACTER :	<SINGLE_REGULAR_STRING_LITERAL_CHARACTER>
	|	<SIMPLE_ESCAPE_SEQUENCE>
	|	<HEXADECIMAL_ESCAPE_SEQUENCE>
	|	<UNICODE_ESCAPE_SEQUENCE>>
	|	<#SINGLE_REGULAR_STRING_LITERAL_CHARACTER: ~[ "\"" , "\\" , "\r" , "\n" , "\u2028" , "\u2029"]>
}
FSTInfo IDENTIFIER_CSHARP(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	<IDENTIFIER> {return productionEndTerminal("IDENTIFIER_CSHARP1","-","{TOSTRING}","Replacement","Default",first,token);}
 |
	"yield"  {return productionEndTerminal("IDENTIFIER_CSHARP2","-","-","Replacement","Default",first,token);}
 |
	"by"  {return productionEndTerminal("IDENTIFIER_CSHARP3","-","-","Replacement","Default",first,token);}
 |
	"let"  {return productionEndTerminal("IDENTIFIER_CSHARP4","-","-","Replacement","Default",first,token);}
 |
	"from"  {return productionEndTerminal("IDENTIFIER_CSHARP5","-","-","Replacement","Default",first,token);}
 |
	"into"  {return productionEndTerminal("IDENTIFIER_CSHARP6","-","-","Replacement","Default",first,token);}
 |
	"group"  {return productionEndTerminal("IDENTIFIER_CSHARP7","-","-","Replacement","Default",first,token);}
 |
	"select"  {return productionEndTerminal("IDENTIFIER_CSHARP8","-","-","Replacement","Default",first,token);}
 |
	"where"  {return productionEndTerminal("IDENTIFIER_CSHARP9","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo compilation_unit(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=using_directive(inTerminal){ replaceName(n);})* [n=attributes_either(inTerminal){ replaceName(n);}] [n=compilation_unitEnd(inTerminal){ replaceName(n);}] <EOF> {return productionEndNonTerminal("compilation_unit","-","-");}

 )  }

FSTInfo identifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=IDENTIFIER_CSHARP(true){ replaceName("IDENTIFIER_CSHARP", n);}{ replaceName(n);} {return productionEndTerminal("identifier1","-","{IDENTIFIER_CSHARP}","Replacement","Default",first,token);}
 |
	"module"  {return productionEndTerminal("identifier2","-","module","Replacement","Default",first,token);}
 |
	"assembly"  {return productionEndTerminal("identifier3","-","assembly","Replacement","Default",first,token);}

 )  }

FSTInfo literal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=boolean_literal(true){ replaceName(n);} {return productionEndTerminal("literal1","-","-","Replacement","Default",first,token);}
 |
	<NUMERIC_LITERAL> {return productionEndTerminal("literal2","-","-","Replacement","Default",first,token);}
 |
	<HEXADECIMAL_INTEGER_LITERAL> {return productionEndTerminal("literal3","-","-","Replacement","Default",first,token);}
 |
	<CHARACTER_LITERAL> {return productionEndTerminal("literal4","-","-","Replacement","Default",first,token);}
 |
	<REGULAR_STRING_LITERAL> {return productionEndTerminal("literal5","-","-","Replacement","Default",first,token);}
 |
	<VERBATIM_STRING_LITERAL> {return productionEndTerminal("literal6","-","-","Replacement","Default",first,token);}
 |
	"null"  {return productionEndTerminal("literal7","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo boolean_literal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"true"  {return productionEndTerminal("boolean_literal1","-","-","Replacement","Default",first,token);}
 |
	"false"  {return productionEndTerminal("boolean_literal2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo type_name(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name_part(true){ replaceName("type_name_part", n);}{ replaceName(n);} ["::" n=type_name_part(true){ replaceName("type_name_part", n);}{ replaceName(n);}] ("." n=type_name_part(true){ replaceName("type_name_part", n);}{ replaceName(n);})* {return productionEndTerminal("type_name","-","{type_name_part}^.","Replacement","Default",first,token);}

 )  }

FSTInfo type_name_part(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName("identifier", n);}{ replaceName(n);} [LOOKAHEAD(type_argument_list(inTerminal)) n=type_argument_list(true){ replaceName(n);}] {return productionEndTerminal("type_name_part","-","{identifier}","Replacement","Default",first,token);}

 )  }

FSTInfo type_argument_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"<" [n=type(true){ replaceName(n);}] ("," n=type(true){ replaceName(n);})* ">" {return productionEndTerminal("type_argument_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=non_array_type(true){ replaceName(n);} ["?" ] [n=rank_specifiers(true){ replaceName(n);}] ["*" ] {return productionEndTerminal("type","-","{TOSTRING}","Replacement","Default",first,token);}

 )  }

FSTInfo rank_specifiers(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=rank_specifier(true){ replaceName(n);})+ {return productionEndTerminal("rank_specifiers","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo rank_specifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"[" ("," )* "]" {return productionEndTerminal("rank_specifier","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo non_array_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=predefined_type(true){ replaceName(n);} {return productionEndTerminal("non_array_type1","-","-","Replacement","Default",first,token);}
 |
	n=type_name(true){ replaceName(n);} {return productionEndTerminal("non_array_type2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo predefined_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=simple_type(true){ replaceName(n);} {return productionEndTerminal("predefined_type1","-","-","Replacement","Default",first,token);}
 |
	"object"  {return productionEndTerminal("predefined_type2","-","-","Replacement","Default",first,token);}
 |
	"string"  {return productionEndTerminal("predefined_type3","-","-","Replacement","Default",first,token);}
 |
	"void"  {return productionEndTerminal("predefined_type4","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo simple_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=numeric_type(true){ replaceName(n);} {return productionEndTerminal("simple_type1","-","-","Replacement","Default",first,token);}
 |
	"bool"  {return productionEndTerminal("simple_type2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo numeric_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=integral_type(true){ replaceName(n);} {return productionEndTerminal("numeric_type1","-","-","Replacement","Default",first,token);}
 |
	n=floating_point_type(true){ replaceName(n);} {return productionEndTerminal("numeric_type2","-","-","Replacement","Default",first,token);}
 |
	"decimal"  {return productionEndTerminal("numeric_type3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo integral_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"sbyte"  {return productionEndTerminal("integral_type1","-","-","Replacement","Default",first,token);}
 |
	"byte"  {return productionEndTerminal("integral_type2","-","-","Replacement","Default",first,token);}
 |
	"short"  {return productionEndTerminal("integral_type3","-","-","Replacement","Default",first,token);}
 |
	"ushort"  {return productionEndTerminal("integral_type4","-","-","Replacement","Default",first,token);}
 |
	"int"  {return productionEndTerminal("integral_type5","-","-","Replacement","Default",first,token);}
 |
	"uint"  {return productionEndTerminal("integral_type6","-","-","Replacement","Default",first,token);}
 |
	"long"  {return productionEndTerminal("integral_type7","-","-","Replacement","Default",first,token);}
 |
	"ulong"  {return productionEndTerminal("integral_type8","-","-","Replacement","Default",first,token);}
 |
	"char"  {return productionEndTerminal("integral_type9","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo class_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name(true){ replaceName(n);} {return productionEndTerminal("class_type1","-","-","Replacement","Default",first,token);}
 |
	"object"  {return productionEndTerminal("class_type2","-","-","Replacement","Default",first,token);}
 |
	"string"  {return productionEndTerminal("class_type3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo floating_point_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"float"  {return productionEndTerminal("floating_point_type1","-","-","Replacement","Default",first,token);}
 |
	"double"  {return productionEndTerminal("floating_point_type2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD(anonymous_function_signature() "=>") n=lambda_expression(true){ replaceName(n);} {return productionEndTerminal("expression1","-","-","Replacement","Default",first,token);}
 |
	n=query_expression(true){ replaceName(n);} {return productionEndTerminal("expression2","-","-","Replacement","Default",first,token);}
 |
	n=conditional_expression(true){ replaceName(n);} [n=expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("expression3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo constant_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=expression(true){ replaceName(n);} {return productionEndTerminal("constant_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=assignment_operator(true){ replaceName(n);} n=expression(true){ replaceName(n);} {return productionEndTerminal("expressionInternal","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo assignment(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=conditional_expression(true){ replaceName(n);} n=assignment_operator(true){ replaceName(n);} n=expression(true){ replaceName(n);} {return productionEndTerminal("assignment","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo assignment_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"="  {return productionEndTerminal("assignment_operator1","-","-","Replacement","Default",first,token);}
 |
	"+="  {return productionEndTerminal("assignment_operator2","-","-","Replacement","Default",first,token);}
 |
	"-="  {return productionEndTerminal("assignment_operator3","-","-","Replacement","Default",first,token);}
 |
	"*="  {return productionEndTerminal("assignment_operator4","-","-","Replacement","Default",first,token);}
 |
	"/="  {return productionEndTerminal("assignment_operator5","-","-","Replacement","Default",first,token);}
 |
	"%="  {return productionEndTerminal("assignment_operator6","-","-","Replacement","Default",first,token);}
 |
	"&="  {return productionEndTerminal("assignment_operator7","-","-","Replacement","Default",first,token);}
 |
	"|="  {return productionEndTerminal("assignment_operator8","-","-","Replacement","Default",first,token);}
 |
	"^="  {return productionEndTerminal("assignment_operator9","-","-","Replacement","Default",first,token);}
 |
	"<<="  {return productionEndTerminal("assignment_operator10","-","-","Replacement","Default",first,token);}
 |
	">>="  {return productionEndTerminal("assignment_operator11","-","-","Replacement","Default",first,token);}
 |
	">>>="  {return productionEndTerminal("assignment_operator12","-","-","Replacement","Default",first,token);}
 |
	"??"  {return productionEndTerminal("assignment_operator13","-","-","Replacement","Default",first,token);}
 |
	"::"  {return productionEndTerminal("assignment_operator14","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo conditional_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=conditional_or_expression(true){ replaceName(n);} [n=conditional_expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("conditional_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo conditional_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"?" n=expression(true){ replaceName(n);} ":" n=conditional_expression(true){ replaceName(n);} {return productionEndTerminal("conditional_expressionInternal","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo conditional_or_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=conditional_and_expression(true){ replaceName(n);} ["||" n=conditional_or_expression(true){ replaceName(n);}] {return productionEndTerminal("conditional_or_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo conditional_and_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=inclusive_or_expression(true){ replaceName(n);} ["&&" n=conditional_and_expression(true){ replaceName(n);}] {return productionEndTerminal("conditional_and_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo inclusive_or_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=exclusive_or_expression(true){ replaceName(n);} ["|" n=inclusive_or_expression(true){ replaceName(n);}] {return productionEndTerminal("inclusive_or_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo exclusive_or_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=and_expression(true){ replaceName(n);} ["^" n=exclusive_or_expression(true){ replaceName(n);}] {return productionEndTerminal("exclusive_or_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo and_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=equality_expression(true){ replaceName(n);} ["&" n=and_expression(true){ replaceName(n);}] {return productionEndTerminal("and_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo equality_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=relational_expression(true){ replaceName(n);} [n=equality_expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("equality_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo equality_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=equality_operator(true){ replaceName(n);} n=equality_expression(true){ replaceName(n);} {return productionEndTerminal("equality_expressionInternal","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo equality_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"=="  {return productionEndTerminal("equality_operator1","-","-","Replacement","Default",first,token);}
 |
	"!="  {return productionEndTerminal("equality_operator2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo relational_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=shift_expression(true){ replaceName(n);} [n=relational_expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("relational_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo relational_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=relational_operator(true){ replaceName(n);} n=relational_expression(true){ replaceName(n);} {return productionEndTerminal("relational_expressionInternal1","-","-","Replacement","Default",first,token);}
 |
	n=relational_operator2I(true){ replaceName(n);} n=type(true){ replaceName(n);} {return productionEndTerminal("relational_expressionInternal2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo relational_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"<"  {return productionEndTerminal("relational_operator1","-","-","Replacement","Default",first,token);}
 |
	">"  {return productionEndTerminal("relational_operator2","-","-","Replacement","Default",first,token);}
 |
	"<="  {return productionEndTerminal("relational_operator3","-","-","Replacement","Default",first,token);}
 |
	">="  {return productionEndTerminal("relational_operator4","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo relational_operator2I(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"is"  {return productionEndTerminal("relational_operator2I1","-","-","Replacement","Default",first,token);}
 |
	"as"  {return productionEndTerminal("relational_operator2I2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo shift_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=additive_expression(true){ replaceName(n);} [n=shift_expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("shift_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo shift_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=shift_operator(true){ replaceName(n);} n=shift_expression(true){ replaceName(n);} {return productionEndTerminal("shift_expressionInternal","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo shift_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"<<"  {return productionEndTerminal("shift_operator1","-","-","Replacement","Default",first,token);}
 |
	">>"  {return productionEndTerminal("shift_operator2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo additive_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=multiplicative_expression(true){ replaceName(n);} [n=additive_expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("additive_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo additive_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=additive_operator(true){ replaceName(n);} n=additive_expression(true){ replaceName(n);} {return productionEndTerminal("additive_expressionInternal","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo additive_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"+"  {return productionEndTerminal("additive_operator1","-","-","Replacement","Default",first,token);}
 |
	"-"  {return productionEndTerminal("additive_operator2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo multiplicative_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=unary_expression(true){ replaceName(n);} [n=multiplicative_expressionInternal(true){ replaceName(n);}] {return productionEndTerminal("multiplicative_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo multiplicative_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=multiplicative_operator(true){ replaceName(n);} n=multiplicative_expression(true){ replaceName(n);} {return productionEndTerminal("multiplicative_expressionInternal","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo multiplicative_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"*"  {return productionEndTerminal("multiplicative_operator1","-","-","Replacement","Default",first,token);}
 |
	"/"  {return productionEndTerminal("multiplicative_operator2","-","-","Replacement","Default",first,token);}
 |
	"%"  {return productionEndTerminal("multiplicative_operator3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo unary_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=unary_operator(true){ replaceName(n);} n=unary_expression(true){ replaceName(n);} {return productionEndTerminal("unary_expression1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(cast_expression()) n=cast_expression(true){ replaceName(n);} {return productionEndTerminal("unary_expression2","-","-","Replacement","Default",first,token);}
 |
	n=primary_expression(true){ replaceName(n);} {return productionEndTerminal("unary_expression3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo unary_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"+"  {return productionEndTerminal("unary_operator1","-","-","Replacement","Default",first,token);}
 |
	"-"  {return productionEndTerminal("unary_operator2","-","-","Replacement","Default",first,token);}
 |
	"!"  {return productionEndTerminal("unary_operator3","-","-","Replacement","Default",first,token);}
 |
	"~"  {return productionEndTerminal("unary_operator4","-","-","Replacement","Default",first,token);}
 |
	"*"  {return productionEndTerminal("unary_operator5","-","-","Replacement","Default",first,token);}
 |
	"++"  {return productionEndTerminal("unary_operator6","-","-","Replacement","Default",first,token);}
 |
	"--"  {return productionEndTerminal("unary_operator7","-","-","Replacement","Default",first,token);}
 |
	"&"  {return productionEndTerminal("unary_operator8","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo cast_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" n=type(true){ replaceName(n);} ")" n=unary_expression(true){ replaceName(n);} {return productionEndTerminal("cast_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo primary_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=primary_expression_start(true){ replaceName(n);} [LOOKAHEAD(primary_expression_postfix(inTerminal)) n=primary_expression_postfix(true){ replaceName(n);}] {return productionEndTerminal("primary_expression1","-","-","Replacement","Default",first,token);}
 |
	n=creation_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo primary_expression_start(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD("(" expression() ")") n=parenthesized_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start1","-","-","Replacement","Default",first,token);}
 |
	n=literal(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start2","-","-","Replacement","Default",first,token);}
 |
	n=identifier(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start3","-","-","Replacement","Default",first,token);}
 |
	n=predefined_type(true){ replaceName(n);} n=member_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start4","-","-","Replacement","Default",first,token);}
 |
	n=member_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start5","-","-","Replacement","Default",first,token);}
 |
	n=this_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start6","-","-","Replacement","Default",first,token);}
 |
	n=base_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start7","-","-","Replacement","Default",first,token);}
 |
	n=typeof_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start8","-","-","Replacement","Default",first,token);}
 |
	n=sizeof_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start9","-","-","Replacement","Default",first,token);}
 |
	n=checked_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start10","-","-","Replacement","Default",first,token);}
 |
	n=unchecked_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start11","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(2) n=default_value_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start12","-","-","Replacement","Default",first,token);}
 |
	n=anonymous_method_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_start13","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo default_value_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"default" "(" n=type(true){ replaceName(n);} ")" {return productionEndTerminal("default_value_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo primary_expression_postfix(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(LOOKAHEAD(primary_expression_postfixInternal(inTerminal)) n=primary_expression_postfixInternal(true){ replaceName(n);})+ {return productionEndTerminal("primary_expression_postfix","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo primary_expression_postfixInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=member_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_postfixInternal1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD([type_argument_list(inTerminal)] "(") n=invocation_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_postfixInternal2","-","-","Replacement","Default",first,token);}
 |
	n=element_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_postfixInternal3","-","-","Replacement","Default",first,token);}
 |
	n=post_increment_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_postfixInternal4","-","-","Replacement","Default",first,token);}
 |
	n=post_decrement_expression(true){ replaceName(n);} {return productionEndTerminal("primary_expression_postfixInternal5","-","-","Replacement","Default",first,token);}
 |
	n=pointer_member_access(true){ replaceName(n);} {return productionEndTerminal("primary_expression_postfixInternal6","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo array_creation_postfix_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=array_creation_postfix_expressionInternal(true){ replaceName(n);})+ {return productionEndTerminal("array_creation_postfix_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo array_creation_postfix_expressionInternal(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=member_access(true){ replaceName(n);} {return productionEndTerminal("array_creation_postfix_expressionInternal1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD([type_argument_list(inTerminal)] "(") n=invocation_expression(true){ replaceName(n);} {return productionEndTerminal("array_creation_postfix_expressionInternal2","-","-","Replacement","Default",first,token);}
 |
	n=post_increment_expression(true){ replaceName(n);} {return productionEndTerminal("array_creation_postfix_expressionInternal3","-","-","Replacement","Default",first,token);}
 |
	n=post_decrement_expression(true){ replaceName(n);} {return productionEndTerminal("array_creation_postfix_expressionInternal4","-","-","Replacement","Default",first,token);}
 |
	n=pointer_member_access(true){ replaceName(n);} {return productionEndTerminal("array_creation_postfix_expressionInternal5","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo creation_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"new" [n=non_array_type(true){ replaceName(n);}] n=creation_expressionPostFix(true){ replaceName(n);} [n=object_initializer(true){ replaceName(n);}] {return productionEndTerminal("creation_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo object_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" [n=member_initializer_list(true){ replaceName(n);}] "}" {return productionEndTerminal("object_initializer","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo member_initializer_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=member_initializer(true){ replaceName(n);} ("," n=member_initializer(true){ replaceName(n);})* {return productionEndTerminal("member_initializer_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo member_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=expression(true){ replaceName(n);} ["=" n=initializer_value(true){ replaceName(n);}] {return productionEndTerminal("member_initializer","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo initializer_value(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=expression(true){ replaceName(n);} {return productionEndTerminal("initializer_value","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo creation_expressionPostFix(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" [n=argument_list(true){ replaceName(n);}] ")" [n=primary_expression_postfix(true){ replaceName(n);}] {return productionEndTerminal("creation_expressionPostFix1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(2) "[" n=expression_list(true){ replaceName(n);} "]" [n=rank_specifiers(true){ replaceName(n);}] [n=array_initializer(true){ replaceName(n);}] [n=array_creation_postfix_expression(true){ replaceName(n);}] {return productionEndTerminal("creation_expressionPostFix2","-","-","Replacement","Default",first,token);}
 |
	n=rank_specifiers(true){ replaceName(n);} n=array_initializer(true){ replaceName(n);} [n=array_creation_postfix_expression(true){ replaceName(n);}] {return productionEndTerminal("creation_expressionPostFix3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo parenthesized_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" n=expression(true){ replaceName(n);} ")" ["=>" n=anonymous_function_body(true){ replaceName(n);}] {return productionEndTerminal("parenthesized_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo member_access(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"." n=identifier(true){ replaceName(n);} [LOOKAHEAD(type_argument_list(inTerminal)) n=type_argument_list(true){ replaceName(n);}] {return productionEndTerminal("member_access","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo invocation_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=type_argument_list(true){ replaceName(n);}] "(" [n=argument_list(true){ replaceName(n);}] ")" {return productionEndTerminal("invocation_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo argument_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=argument(true){ replaceName(n);} ("," n=argument(true){ replaceName(n);})* {return productionEndTerminal("argument_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo argument(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=argumentPrefix(true){ replaceName(n);}] n=expression(true){ replaceName(n);} {return productionEndTerminal("argument","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo delegate_arg(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" n=formal_parameter_list(true){ replaceName(n);} ")" {return productionEndTerminal("delegate_arg","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo argumentPrefix(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"ref"  {return productionEndTerminal("argumentPrefix1","-","-","Replacement","Default",first,token);}
 |
	"out"  {return productionEndTerminal("argumentPrefix2","-","-","Replacement","Default",first,token);}
 |
	"&"  {return productionEndTerminal("argumentPrefix3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo element_access(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"[" n=argument_list(true){ replaceName(n);} "]" {return productionEndTerminal("element_access","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo expression_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=expression(true){ replaceName(n);} (n=expression_listList(true){ replaceName(n);})* {return productionEndTerminal("expression_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo expression_listList(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"," n=expression(true){ replaceName(n);} {return productionEndTerminal("expression_listList","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo this_access(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"this"  {return productionEndTerminal("this_access","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo base_access(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD(2) "base" n=member_access(true){ replaceName(n);} {return productionEndTerminal("base_access1","-","-","Replacement","Default",first,token);}
 |
	"base" n=element_access(true){ replaceName(n);} {return productionEndTerminal("base_access2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo post_increment_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"++"  {return productionEndTerminal("post_increment_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo post_decrement_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"--"  {return productionEndTerminal("post_decrement_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo typeof_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"typeof" "(" n=type(true){ replaceName(n);} ")" {return productionEndTerminal("typeof_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo checked_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"checked" "(" n=expression(true){ replaceName(n);} ")" {return productionEndTerminal("checked_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo unchecked_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"unchecked" "(" n=expression(true){ replaceName(n);} ")" {return productionEndTerminal("unchecked_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD(2) n=identifier(true){ replaceName(n);} ":" n=statement(true){ replaceName(n);} {return productionEndTerminal("statement1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(type() identifier()) n=local_variable_declaration(true){ replaceName(n);} ";" {return productionEndTerminal("statement2","-","-","Replacement","Default",first,token);}
 |
	n=local_constant_declaration(true){ replaceName(n);} ";" {return productionEndTerminal("statement3","-","-","Replacement","Default",first,token);}
 |
	n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("statement4","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_variable_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type(true){ replaceName(n);} n=local_variable_declarators(true){ replaceName(n);} {return productionEndTerminal("local_variable_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_variable_declarators(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=local_variable_declarator(true){ replaceName(n);} ["," n=local_variable_declarators(true){ replaceName(n);}] {return productionEndTerminal("local_variable_declarators","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_variable_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} [n=local_variable_assignment(true){ replaceName(n);}] {return productionEndTerminal("local_variable_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_variable_assignment(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"=" n=local_variable_initializer(true){ replaceName(n);} {return productionEndTerminal("local_variable_assignment","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_variable_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=array_initializer(true){ replaceName(n);} {return productionEndTerminal("local_variable_initializer1","-","-","Replacement","Default",first,token);}
 |
	n=expression(true){ replaceName(n);} {return productionEndTerminal("local_variable_initializer2","-","-","Replacement","Default",first,token);}
 |
	n=stackalloc_initializer(true){ replaceName(n);} {return productionEndTerminal("local_variable_initializer3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_constant_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"const" n=type(true){ replaceName(n);} n=local_constant_declarators(true){ replaceName(n);} {return productionEndTerminal("local_constant_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_constant_declarators(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=local_constant_declarator(true){ replaceName(n);} ["," n=local_constant_declarators(true){ replaceName(n);}] {return productionEndTerminal("local_constant_declarators","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo local_constant_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} "=" n=local_variable_initializer(true){ replaceName(n);} {return productionEndTerminal("local_constant_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo embedded_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=block(true){ replaceName(n);} {return productionEndTerminal("embedded_statement1","-","-","Replacement","Default",first,token);}
 |
	";"  {return productionEndTerminal("embedded_statement2","-","-","Replacement","Default",first,token);}
 |
	n=selection_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement3","-","-","Replacement","Default",first,token);}
 |
	n=iteration_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement4","-","-","Replacement","Default",first,token);}
 |
	n=jump_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement5","-","-","Replacement","Default",first,token);}
 |
	n=try_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement6","-","-","Replacement","Default",first,token);}
 |
	n=checked_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement7","-","-","Replacement","Default",first,token);}
 |
	n=unchecked_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement8","-","-","Replacement","Default",first,token);}
 |
	n=lock_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement9","-","-","Replacement","Default",first,token);}
 |
	n=using_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement10","-","-","Replacement","Default",first,token);}
 |
	n=unsafe_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement11","-","-","Replacement","Default",first,token);}
 |
	n=fixed_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement12","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(2) n=yield_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement13","-","-","Replacement","Default",first,token);}
 |
	n=expression_statement(true){ replaceName(n);} {return productionEndTerminal("embedded_statement14","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo block(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" (n=statement(true){ replaceName(n);})* "}" {return productionEndTerminal("block","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo statement_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=statement(true){ replaceName(n);})+ {return productionEndTerminal("statement_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo expression_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=expression(true){ replaceName(n);} ";" {return productionEndTerminal("expression_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo selection_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=if_statement(true){ replaceName(n);} {return productionEndTerminal("selection_statement1","-","-","Replacement","Default",first,token);}
 |
	n=switch_statement(true){ replaceName(n);} {return productionEndTerminal("selection_statement2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo if_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"if" "(" n=expression(true){ replaceName(n);} ")" n=embedded_statement(true){ replaceName(n);} ["else" n=embedded_statement(true){ replaceName(n);}] {return productionEndTerminal("if_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo switch_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"switch" "(" n=expression(true){ replaceName(n);} ")" "{" (n=switch_statement_label(true){ replaceName(n);})* "}" {return productionEndTerminal("switch_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo switch_statement_label(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=switch_label(true){ replaceName(n);} (LOOKAHEAD(2) n=statement(true){ replaceName(n);})* {return productionEndTerminal("switch_statement_label","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo switch_label(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"case" n=expression(true){ replaceName(n);} ":" {return productionEndTerminal("switch_label1","-","-","Replacement","Default",first,token);}
 |
	"default" ":"  {return productionEndTerminal("switch_label2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo iteration_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=while_statement(true){ replaceName(n);} {return productionEndTerminal("iteration_statement1","-","-","Replacement","Default",first,token);}
 |
	n=do_statement(true){ replaceName(n);} {return productionEndTerminal("iteration_statement2","-","-","Replacement","Default",first,token);}
 |
	n=for_statement(true){ replaceName(n);} {return productionEndTerminal("iteration_statement3","-","-","Replacement","Default",first,token);}
 |
	n=foreach_statement(true){ replaceName(n);} {return productionEndTerminal("iteration_statement4","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo while_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"while" "(" n=expression(true){ replaceName(n);} ")" n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("while_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo do_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"do" n=embedded_statement(true){ replaceName(n);} "while" "(" n=expression(true){ replaceName(n);} ")" {return productionEndTerminal("do_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo for_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"for" "(" [n=for_initializer(true){ replaceName(n);}] ";" [n=expression(true){ replaceName(n);}] ";" [n=expression_list(true){ replaceName(n);}] ")" n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("for_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo for_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD(type() identifier()) n=local_variable_declaration(true){ replaceName(n);} {return productionEndTerminal("for_initializer1","-","-","Replacement","Default",first,token);}
 |
	n=expression_list(true){ replaceName(n);} {return productionEndTerminal("for_initializer2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo foreach_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"foreach" "(" n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} "in" n=expression(true){ replaceName(n);} ")" n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("foreach_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo yield_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"yield" n=yield_statement_body(true){ replaceName(n);} {return productionEndTerminal("yield_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo yield_statement_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=break_statement(true){ replaceName(n);} {return productionEndTerminal("yield_statement_body1","-","-","Replacement","Default",first,token);}
 |
	"return" n=expression(true){ replaceName(n);} ";" {return productionEndTerminal("yield_statement_body2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo jump_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=break_statement(true){ replaceName(n);} {return productionEndTerminal("jump_statement1","-","-","Replacement","Default",first,token);}
 |
	"continue" ";"  {return productionEndTerminal("jump_statement2","-","-","Replacement","Default",first,token);}
 |
	n=goto_statement(true){ replaceName(n);} {return productionEndTerminal("jump_statement3","-","-","Replacement","Default",first,token);}
 |
	n=return_statement(true){ replaceName(n);} {return productionEndTerminal("jump_statement4","-","-","Replacement","Default",first,token);}
 |
	n=throw_statement(true){ replaceName(n);} {return productionEndTerminal("jump_statement5","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo break_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"break" ";"  {return productionEndTerminal("break_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo goto_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"goto" n=goto_statementEnd(true){ replaceName(n);} {return productionEndTerminal("goto_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo goto_statementEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} ";" {return productionEndTerminal("goto_statementEnd1","-","-","Replacement","Default",first,token);}
 |
	"case" n=expression(true){ replaceName(n);} ";" {return productionEndTerminal("goto_statementEnd2","-","-","Replacement","Default",first,token);}
 |
	"default" ";"  {return productionEndTerminal("goto_statementEnd3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo return_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"return" [n=expression(true){ replaceName(n);}] ";" {return productionEndTerminal("return_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo throw_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"throw" [n=expression(true){ replaceName(n);}] ";" {return productionEndTerminal("throw_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo try_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"try" n=block(true){ replaceName(n);} n=try_statement_clauses(true){ replaceName(n);} {return productionEndTerminal("try_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo try_statement_clauses(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=catch_clauses(true){ replaceName(n);} [n=finally_clause(true){ replaceName(n);}] {return productionEndTerminal("try_statement_clauses1","-","-","Replacement","Default",first,token);}
 |
	n=finally_clause(true){ replaceName(n);} {return productionEndTerminal("try_statement_clauses2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo catch_clauses(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=catch_clause(true){ replaceName(n);})+ {return productionEndTerminal("catch_clauses","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo catch_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"catch" n=catch_clauseEnd(true){ replaceName(n);} {return productionEndTerminal("catch_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo catch_clauseEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" n=type(true){ replaceName(n);} [n=identifier(true){ replaceName(n);}] ")" n=block(true){ replaceName(n);} {return productionEndTerminal("catch_clauseEnd1","-","-","Replacement","Default",first,token);}
 |
	n=block(true){ replaceName(n);} {return productionEndTerminal("catch_clauseEnd2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo finally_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"finally" n=block(true){ replaceName(n);} {return productionEndTerminal("finally_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo checked_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"checked" n=block(true){ replaceName(n);} {return productionEndTerminal("checked_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo unchecked_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"unchecked" n=block(true){ replaceName(n);} {return productionEndTerminal("unchecked_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo lock_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"lock" "(" n=expression(true){ replaceName(n);} ")" n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("lock_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo using_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"using" "(" n=resource_acquisition(true){ replaceName(n);} ")" n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("using_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo resource_acquisition(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD(type() identifier() (","|";"|"=")) n=local_variable_declaration(true){ replaceName(n);} {return productionEndTerminal("resource_acquisition1","-","-","Replacement","Default",first,token);}
 |
	n=expression(true){ replaceName(n);} {return productionEndTerminal("resource_acquisition2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo compilation_unitEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=namespace_member_declaration_no_attr(inTerminal){ replaceName(n);})+ (n=namespace_member_declaration(inTerminal){ replaceName(n);})* {return productionEndNonTerminal("compilation_unitEnd","-","-");}

 )  }

FSTInfo namespace_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"namespace" n=type_name(inTerminal){ replaceName("type_name", n);}{ replaceName(n);} n=namespace_body(inTerminal){ replaceName(n);} {return productionEndNonTerminal("namespace_declaration","{type_name}","{type_name}");}

 )  }

FSTInfo namespace_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" (n=using_directive(inTerminal){ replaceName(n);})* (n=namespace_member_declaration(inTerminal){ replaceName(n);})* "}" [";" ] {return productionEndNonTerminal("namespace_body","-","-");}

 )  }

FSTInfo using_directive(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"using" n=type_name(true){ replaceName("type_name", n);}{ replaceName(n);} n=using_directiveEnd(true){ replaceName(n);} {return productionEndTerminal("using_directive","{type_name}","{type_name}","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo using_directiveEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"=" n=type_name(true){ replaceName(n);} ";" {return productionEndTerminal("using_directiveEnd1","-","-","Replacement","Default",first,token);}
 |
	";"  {return productionEndTerminal("using_directiveEnd2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo namespace_member_declaration_no_attr(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=namespace_declaration(inTerminal){ replaceName("namespace_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("namespace_member_declaration_no_attr1","{namespace_declaration}","{namespace_declaration}");}
 |
	[n=class_modifiers(inTerminal){ replaceName(n);}] n=type_declaration(inTerminal){ replaceName("type_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("namespace_member_declaration_no_attr2","{type_declaration}","{type_declaration}");}

 )  }

FSTInfo namespace_member_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=namespace_declaration(inTerminal){ replaceName("namespace_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("namespace_member_declaration1","{namespace_declaration}","{namespace_declaration}");}
 |
	[n=attributes(inTerminal){ replaceName(n);}] [n=class_modifiers(inTerminal){ replaceName(n);}] n=namespace_member_declarationEnd(inTerminal){ replaceName("namespace_member_declarationEnd", n);}{ replaceName(n);} {return productionEndNonTerminal("namespace_member_declaration2","{namespace_member_declarationEnd}","{namespace_member_declarationEnd}");}

 )  }

FSTInfo namespace_member_declarationEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_declaration(inTerminal){ replaceName("type_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("namespace_member_declarationEnd1","{type_declaration}","{type_declaration}");}
 |
	n=type(inTerminal){ replaceName("type", n);}{ replaceName(n);} n=typeEnd(inTerminal){ replaceName("typeEnd", n);}{ replaceName(n);} {return productionEndNonTerminal("namespace_member_declarationEnd2","{type}{typeEnd}","{type}{typeEnd}");}

 )  }

FSTInfo type_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=class_declaration(inTerminal){ replaceName("class_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("type_declaration1","{class_declaration}","{class_declaration}");}
 |
	n=struct_declaration(inTerminal){ replaceName("struct_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("type_declaration2","{struct_declaration}","{struct_declaration}");}
 |
	n=interface_declaration(inTerminal){ replaceName("interface_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("type_declaration3","{interface_declaration}","{interface_declaration}");}
 |
	n=enum_declaration(inTerminal){ replaceName("enum_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("type_declaration4","{enum_declaration}","{enum_declaration}");}
 |
	n=delegate_declaration(inTerminal){ replaceName("delegate_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("type_declaration5","{delegate_declaration}","{delegate_declaration}");}

 )  }

FSTInfo lambda_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=anonymous_function_signature(true){ replaceName(n);} "=>" n=anonymous_function_body(true){ replaceName(n);} {return productionEndTerminal("lambda_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo anonymous_method_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"delegate" [n=explicit_anonymous_function_signature(true){ replaceName(n);}] n=block(true){ replaceName(n);} {return productionEndTerminal("anonymous_method_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo anonymous_function_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=expression(true){ replaceName(n);} {return productionEndTerminal("anonymous_function_body1","-","-","Replacement","Default",first,token);}
 |
	n=body(true){ replaceName(n);} {return productionEndTerminal("anonymous_function_body2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo anonymous_function_signature(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=implicit_anonymous_function_signature(true){ replaceName(n);} {return productionEndTerminal("anonymous_function_signature","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo explicit_anonymous_function_signature(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" [n=explicit_anonymous_function_parameter_list(true){ replaceName(n);}] ")" {return productionEndTerminal("explicit_anonymous_function_signature","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo explicit_anonymous_function_parameter_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=explicit_anonymous_function_parameter(true){ replaceName(n);} ("," n=explicit_anonymous_function_parameter(true){ replaceName(n);})* {return productionEndTerminal("explicit_anonymous_function_parameter_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo explicit_anonymous_function_parameter(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=explicit_anonymous_function_parameter_modifier(true){ replaceName(n);}] n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} {return productionEndTerminal("explicit_anonymous_function_parameter","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo explicit_anonymous_function_parameter_modifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"ref"  {return productionEndTerminal("explicit_anonymous_function_parameter_modifier1","-","-","Replacement","Default",first,token);}
 |
	"out"  {return productionEndTerminal("explicit_anonymous_function_parameter_modifier2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo implicit_anonymous_function_signature(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" [n=implicit_anonymous_function_parameter_list(true){ replaceName(n);}] ")" {return productionEndTerminal("implicit_anonymous_function_signature1","-","-","Replacement","Default",first,token);}
 |
	n=implicit_anonymous_function_parameter(true){ replaceName(n);} {return productionEndTerminal("implicit_anonymous_function_signature2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo implicit_anonymous_function_parameter_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=implicit_anonymous_function_parameter(true){ replaceName(n);} ("," n=implicit_anonymous_function_parameter(true){ replaceName(n);})* {return productionEndTerminal("implicit_anonymous_function_parameter_list","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo implicit_anonymous_function_parameter(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} {return productionEndTerminal("implicit_anonymous_function_parameter","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo query_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=from_clause(true){ replaceName(n);} n=query_body(true){ replaceName(n);} {return productionEndTerminal("query_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo from_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"from" n=identifier(true){ replaceName(n);} "in" n=expression(true){ replaceName(n);} {return productionEndTerminal("from_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo query_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=query_body_clauses(true){ replaceName(n);}] n=select_or_group_clause(true){ replaceName(n);} [n=query_continuation(true){ replaceName(n);}] {return productionEndTerminal("query_body","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo query_body_clauses(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=query_body_clause(true){ replaceName(n);})+ {return productionEndTerminal("query_body_clauses","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo query_body_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=from_clause(true){ replaceName(n);} {return productionEndTerminal("query_body_clause1","-","-","Replacement","Default",first,token);}
 |
	n=let_clause(true){ replaceName(n);} {return productionEndTerminal("query_body_clause2","-","-","Replacement","Default",first,token);}
 |
	n=where_clause(true){ replaceName(n);} {return productionEndTerminal("query_body_clause3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo let_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"let" n=identifier(true){ replaceName(n);} "=" n=expression(true){ replaceName(n);} {return productionEndTerminal("let_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo where_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"where" n=expression(true){ replaceName(n);} {return productionEndTerminal("where_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo select_or_group_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=select_clause(true){ replaceName(n);} {return productionEndTerminal("select_or_group_clause1","-","-","Replacement","Default",first,token);}
 |
	n=group_clause(true){ replaceName(n);} {return productionEndTerminal("select_or_group_clause2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo select_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"select" n=expression(true){ replaceName(n);} {return productionEndTerminal("select_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo group_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"group" n=expression(true){ replaceName(n);} "by" n=expression(true){ replaceName(n);} {return productionEndTerminal("group_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo query_continuation(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"into" n=identifier(true){ replaceName(n);} n=query_body(true){ replaceName(n);} {return productionEndTerminal("query_continuation","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo class_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"class" n=identifier(inTerminal){ replaceName("identifier", n);}{ replaceName(n);} [n=type_parameter_list(inTerminal){ replaceName(n);}] [n=class_base(inTerminal){ replaceName(n);}] [n=type_parameter_constraint_clauses(inTerminal){ replaceName(n);}] n=class_body(inTerminal){ replaceName(n);} [";" ] {return productionEndNonTerminal("class_declaration","{identifier}","{identifier}");}

 )  }

FSTInfo class_modifiers(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=class_modifier(true){ replaceName(n);})+ {return productionEndTerminal("class_modifiers","class_modifiers","class_modifiers","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo class_modifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"new"  {return productionEndTerminal("class_modifier1","-","-","Replacement","Default",first,token);}
 |
	"public"  {return productionEndTerminal("class_modifier2","-","-","Replacement","Default",first,token);}
 |
	"protected"  {return productionEndTerminal("class_modifier3","-","-","Replacement","Default",first,token);}
 |
	"internal"  {return productionEndTerminal("class_modifier4","-","-","Replacement","Default",first,token);}
 |
	"private"  {return productionEndTerminal("class_modifier5","-","-","Replacement","Default",first,token);}
 |
	"abstract"  {return productionEndTerminal("class_modifier6","-","-","Replacement","Default",first,token);}
 |
	"sealed"  {return productionEndTerminal("class_modifier7","-","-","Replacement","Default",first,token);}
 |
	"unsafe"  {return productionEndTerminal("class_modifier8","-","-","Replacement","Default",first,token);}
 |
	"partial"  {return productionEndTerminal("class_modifier9","-","-","Replacement","Default",first,token);}
 |
	"static"  {return productionEndTerminal("class_modifier10","-","-","Replacement","Default",first,token);}
 |
	"volatile"  {return productionEndTerminal("class_modifier11","-","-","Replacement","Default",first,token);}
 |
	"override"  {return productionEndTerminal("class_modifier12","-","-","Replacement","Default",first,token);}
 |
	"readonly"  {return productionEndTerminal("class_modifier13","-","-","Replacement","Default",first,token);}
 |
	"virtual"  {return productionEndTerminal("class_modifier14","-","-","Replacement","Default",first,token);}
 |
	"extern"  {return productionEndTerminal("class_modifier15","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo type_parameter_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"<" n=type_parameter(true){ replaceName(n);} ("," n=type_parameter(true){ replaceName(n);})* ">" {return productionEndTerminal("type_parameter_list","type_parameter_list","type_parameter_list","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo type_parameter(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(true){ replaceName(n);}] n=identifier(true){ replaceName(n);} {return productionEndTerminal("type_parameter","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo type_parameter_constraint_clauses(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_parameter_constraint_clause(true){ replaceName(n);} (n=type_parameter_constraint_clause(true){ replaceName(n);})* {return productionEndTerminal("type_parameter_constraint_clauses","type_parameter_constraint_clauses","type_parameter_constraint_clauses","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo type_parameter_constraint_clause(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"where" n=type_parameter(true){ replaceName(n);} ":" n=type_parameter_constraints(true){ replaceName(n);} {return productionEndTerminal("type_parameter_constraint_clause","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo type_parameter_constraints(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=primary_constraint(true){ replaceName(n);} ["," n=secondary_constraints(true){ replaceName(n);}] {return productionEndTerminal("type_parameter_constraints1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(2) n=secondary_constraints(true){ replaceName(n);} {return productionEndTerminal("type_parameter_constraints2","-","-","Replacement","Default",first,token);}
 |
	n=constructor_constraint(true){ replaceName(n);} {return productionEndTerminal("type_parameter_constraints3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo secondary_constraints(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name_or_parameter(true){ replaceName(n);} ("," n=secondary_constraintsEnd(true){ replaceName(n);})* {return productionEndTerminal("secondary_constraints1","-","-","Replacement","Default",first,token);}
 |
	n=secondary_constraintsEnd(true){ replaceName(n);} {return productionEndTerminal("secondary_constraints2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo secondary_constraintsEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name_or_parameter(true){ replaceName(n);} {return productionEndTerminal("secondary_constraintsEnd1","-","-","Replacement","Default",first,token);}
 |
	n=constructor_constraint(true){ replaceName(n);} {return productionEndTerminal("secondary_constraintsEnd2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo primary_constraint(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=class_type(true){ replaceName(n);} {return productionEndTerminal("primary_constraint1","-","-","Replacement","Default",first,token);}
 |
	"class"  {return productionEndTerminal("primary_constraint2","-","-","Replacement","Default",first,token);}
 |
	"struct"  {return productionEndTerminal("primary_constraint3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo type_name_or_parameter(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name(true){ replaceName(n);} {return productionEndTerminal("type_name_or_parameter1","-","-","Replacement","Default",first,token);}
 |
	n=type_parameter(true){ replaceName(n);} {return productionEndTerminal("type_name_or_parameter2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo constructor_constraint(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"new" "(" ")"  {return productionEndTerminal("constructor_constraint","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo class_base(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	":" n=class_type(true){ replaceName(n);} ("," n=type_name(true){ replaceName(n);})* {return productionEndTerminal("class_base","class_base","class_base","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo interface_type_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name(true){ replaceName(n);} ("," n=type_name(true){ replaceName(n);})* {return productionEndTerminal("interface_type_list","interface_type_list","interface_type_list","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo class_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" (n=class_member_declaration(inTerminal){ replaceName(n);})* "}" {return productionEndNonTerminal("class_body","-","-");}

 )  }

FSTInfo class_member_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(inTerminal){ replaceName(n);}] [n=class_modifiers(inTerminal){ replaceName(n);}] n=class_member_declarationEnd(inTerminal){ replaceName("class_member_declarationEnd", n);}{ replaceName(n);} {return productionEndNonTerminal("class_member_declaration","{class_member_declarationEnd}","{class_member_declarationEnd}");}

 )  }

FSTInfo class_member_declarationEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=constant_declaration(true){ replaceName("constant_declaration", n);}{ replaceName(n);} {return productionEndTerminal("class_member_declarationEnd1","{constant_declaration}","{constant_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=event_declaration(true){ replaceName("event_declaration", n);}{ replaceName(n);} {return productionEndTerminal("class_member_declarationEnd2","{event_declaration}","{event_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=destructor_declaration(true){ replaceName("destructor_declaration", n);}{ replaceName(n);} {return productionEndTerminal("class_member_declarationEnd3","{destructor_declaration}","{destructor_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=conversion_operator_declaration(true){ replaceName("conversion_operator_declaration", n);}{ replaceName(n);} {return productionEndTerminal("class_member_declarationEnd4","{conversion_operator_declaration}","{conversion_operator_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=type_declaration(inTerminal){ replaceName("type_declaration", n);}{ replaceName(n);} {return productionEndNonTerminal("class_member_declarationEnd5","{type_declaration}","{type_declaration}");}
 |
	n=type(true){ replaceName("type", n);}{ replaceName(n);} n=typeEnd(true){ replaceName("typeEnd", n);}{ replaceName(n);} {return productionEndTerminal("class_member_declarationEnd6","{type}{typeEnd}","{type}{typeEnd}","Replacement","LineBased",first,token);}
 |
	n=fixed_size_buffer_declaration(true){ replaceName("fixed_size_buffer_declaration", n);}{ replaceName(n);} {return productionEndTerminal("class_member_declarationEnd7","{fixed_size_buffer_declaration}","{fixed_size_buffer_declaration}","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo fixed_size_buffer_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"fixed" n=buffer_element_type(true){ replaceName(n);} n=fixed_size_buffer_declarators(true){ replaceName(n);} ";" {return productionEndTerminal("fixed_size_buffer_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo buffer_element_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type(true){ replaceName(n);} {return productionEndTerminal("buffer_element_type","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_size_buffer_declarators(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=fixed_size_buffer_declarator(true){ replaceName(n);})+ {return productionEndTerminal("fixed_size_buffer_declarators","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_size_buffer_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} "[" n=constant_expression(true){ replaceName(n);} "]" {return productionEndTerminal("fixed_size_buffer_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_type(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name(true){ replaceName(n);} {return productionEndTerminal("interface_type","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo typeEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=constructor_declaration(true){ replaceName("constructor_declaration", n);}{ replaceName(n);} {return productionEndTerminal("ConstructorDecl","{constructor_declaration}","{constructor_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=indexer_declaration_no_interface(true){ replaceName("indexer_declaration_no_interface", n);}{ replaceName(n);} {return productionEndTerminal("typeEnd2","{indexer_declaration_no_interface}","{indexer_declaration_no_interface}","Replacement","SemanticConflict",first,token);}
 |
	n=operator_declaration(true){ replaceName("operator_declaration", n);}{ replaceName(n);} {return productionEndTerminal("typeEnd3","{operator_declaration}","{operator_declaration}","Replacement","SemanticConflict",first,token);}
 |
	LOOKAHEAD(indexer_base() "[") n=indexer_declaration_interface(true){ replaceName("indexer_declaration_interface", n);}{ replaceName(n);} {return productionEndTerminal("typeEnd4","{indexer_declaration_interface}","{indexer_declaration_interface}","Replacement","SemanticConflict",first,token);}
 |
	n=type_name(true){ replaceName("type_name", n);}{ replaceName(n);} n=type_nameEnd(true){ replaceName("type_nameEnd", n);}{ replaceName(n);} {return productionEndTerminal("typeEnd5","{type_name}{type_nameEnd}","{type_name}{type_nameEnd}","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo type_nameEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=method_declaration(true){ replaceName("method_declaration", n);}{ replaceName(n);} {return productionEndTerminal("MethodDecl","{method_declaration}","{method_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=property_declaration(true){ replaceName("property_declaration", n);}{ replaceName(n);} {return productionEndTerminal("PropertyDecl","{property_declaration}","{property_declaration}","Replacement","SemanticConflict",first,token);}
 |
	n=field_declaration(true){ replaceName("field_declaration", n);}{ replaceName(n);} {return productionEndTerminal("FieldDecl","{field_declaration}","{field_declaration}","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo accessor_modifiers(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=accessor_modifier(true){ replaceName(n);})+ {return productionEndTerminal("accessor_modifiers","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo accessor_modifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"protected"  {return productionEndTerminal("accessor_modifier1","-","-","Replacement","Default",first,token);}
 |
	"internal"  {return productionEndTerminal("accessor_modifier2","-","-","Replacement","Default",first,token);}
 |
	"private"  {return productionEndTerminal("accessor_modifier3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo constant_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"const" n=type(true){ replaceName(n);} n=constant_declarators(true){ replaceName("constant_declarators", n);}{ replaceName(n);} ";" {return productionEndTerminal("constant_declaration","-","{constant_declarators}","Replacement","Default",first,token);}

 )  }

FSTInfo constant_declarators(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=constant_declarator(true){ replaceName(n);} ("," n=constant_declarator(true){ replaceName(n);})* {return productionEndTerminal("constant_declarators","-","{TOSTRING}","Replacement","Default",first,token);}

 )  }

FSTInfo constant_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} "=" n=expression(true){ replaceName(n);} {return productionEndTerminal("constant_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo field_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=field_declaration_start(true){ replaceName(n);} ["," n=field_declarators(true){ replaceName(n);}] ";" {return productionEndTerminal("field_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo field_declaration_start(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	["=" n=variable_initializer(true){ replaceName(n);}] {return productionEndTerminal("field_declaration_start","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo field_declarators(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=field_declarator(true){ replaceName(n);} ("," n=field_declarator(true){ replaceName(n);})* {return productionEndTerminal("field_declarators","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo field_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} ["=" n=variable_initializer(true){ replaceName(n);}] {return productionEndTerminal("field_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo variable_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=array_initializer(true){ replaceName(n);} {return productionEndTerminal("variable_initializer1","-","-","Replacement","Default",first,token);}
 |
	n=expression(true){ replaceName(n);} {return productionEndTerminal("variable_initializer2","-","-","Replacement","Default",first,token);}
 |
	n=stackalloc_initializer(true){ replaceName(n);} {return productionEndTerminal("variable_initializer3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo method_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=type_parameter_list(true){ replaceName(n);}] "(" [n=formal_parameter_list(true){ replaceName("formal_parameter_list", n);}{ replaceName(n);}] ")" [n=type_parameter_constraint_clauses(true){ replaceName(n);}] n=body(true){ replaceName(n);} {return productionEndTerminal("method_declaration","-","({formal_parameter_list})","Replacement","Default",first,token);}

 )  }

FSTInfo body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=block(true){ replaceName(n);} {return productionEndTerminal("body1","-","-","Replacement","Default",first,token);}
 |
	";"  {return productionEndTerminal("body2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo formal_parameter_list(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(true){ replaceName(n);}] n=formal_parameter_listEnd(true){ replaceName("formal_parameter_listEnd", n);}{ replaceName(n);} {return productionEndTerminal("formal_parameter_list","-","{formal_parameter_listEnd}","Replacement","Default",first,token);}

 )  }

FSTInfo formal_parameter_listEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=fixed_parameter(true){ replaceName("fixed_parameter", n);}{ replaceName(n);} (n=fixed_parameterEnd(true){ replaceName("fixed_parameterEnd", n);}{ replaceName(n);})* {return productionEndTerminal("formal_parameter_listEnd1","-","{fixed_parameter} {fixed_parameterEnd}^~","Replacement","Default",first,token);}
 |
	n=parameter_array(true){ replaceName("parameter_array", n);}{ replaceName(n);} {return productionEndTerminal("formal_parameter_listEnd2","-","{parameter_array}","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_parameterEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"," [n=attributes(true){ replaceName(n);}] n=formal_parameter_listEndInt(true){ replaceName("formal_parameter_listEndInt", n);}{ replaceName(n);} {return productionEndTerminal("fixed_parameterEnd","-","{formal_parameter_listEndInt}","Replacement","Default",first,token);}

 )  }

FSTInfo formal_parameter_listEndInt(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=fixed_parameter(true){ replaceName("fixed_parameter", n);}{ replaceName(n);} {return productionEndTerminal("formal_parameter_listEndInt1","-","{fixed_parameter} {fixed_parameterEnd}^~","Replacement","Default",first,token);}
 |
	LOOKAHEAD(2) n=parameter_array(true){ replaceName("parameter_array", n);}{ replaceName(n);} {return productionEndTerminal("formal_parameter_listEndInt2","-","{parameter_array}","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_parameter(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=parameter_modifier(true){ replaceName(n);}] n=type(true){ replaceName("type", n);}{ replaceName(n);} ["*" ] n=identifier(true){ replaceName(n);} {return productionEndTerminal("fixed_parameter","-","{type}","Replacement","Default",first,token);}

 )  }

FSTInfo parameter_modifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"ref"  {return productionEndTerminal("parameter_modifier1","-","{TOSTRING}","Replacement","Default",first,token);}
 |
	"out"  {return productionEndTerminal("parameter_modifier2","-","{TOSTRING}","Replacement","Default",first,token);}
 |
	"this"  {return productionEndTerminal("parameter_modifier3","-","{TOSTRING}","Replacement","Default",first,token);}

 )  }

FSTInfo parameter_array(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(true){ replaceName(n);}] "params" n=type(true){ replaceName("type", n);}{ replaceName(n);} n=identifier(true){ replaceName(n);} {return productionEndTerminal("parameter_array","-","params {type}","Replacement","Default",first,token);}

 )  }

FSTInfo property_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" n=accessor_declarations(true){ replaceName(n);} "}" {return productionEndTerminal("property_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo accessor_declarations(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=accessor_declaration(true){ replaceName(n);} [n=accessor_declaration(true){ replaceName(n);}] {return productionEndTerminal("accessor_declarations","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo accessor_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=accessor_modifiers(true){ replaceName(n);}] [n=attributes(true){ replaceName(n);}] n=IDENTIFIER_CSHARP(true){ replaceName(n);} n=body(true){ replaceName(n);} {return productionEndTerminal("accessor_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo event_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"event" n=type(true){ replaceName(n);} n=event_declarationInt(true){ replaceName("event_declarationInt", n);}{ replaceName(n);} {return productionEndTerminal("event_declaration","-","{event_declarationInt}","Replacement","Default",first,token);}

 )  }

FSTInfo event_declarationInt(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD(2) n=type_name(true){ replaceName(n);} "{" n=event_accessor_declarations(true){ replaceName(n);} "}" {return productionEndTerminal("event_declarationInt1","-","{TOSTRING}","Replacement","Default",first,token);}
 |
	n=event_variable_declarator(true){ replaceName(n);} ("," n=event_variable_declarator(true){ replaceName(n);})* ";" {return productionEndTerminal("event_declarationInt2","-","{TOSTRING}","Replacement","Default",first,token);}

 )  }

FSTInfo event_variable_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} ["=" n=variable_initializer(true){ replaceName(n);}] {return productionEndTerminal("event_variable_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo event_accessor_declarations(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=accessor_declaration(true){ replaceName(n);} n=accessor_declaration(true){ replaceName(n);} {return productionEndTerminal("event_accessor_declarations","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo indexer_declaration_no_interface(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"this" "[" n=formal_parameter_list(true){ replaceName(n);} "]" "{" n=accessor_declarations(true){ replaceName(n);} "}" {return productionEndTerminal("indexer_declaration_no_interface","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo indexer_declaration_interface(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=indexer_base(true){ replaceName(n);} "[" n=formal_parameter_list(true){ replaceName(n);} "]" "{" n=accessor_declarations(true){ replaceName(n);} "}" {return productionEndTerminal("indexer_declaration_interface","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo indexer_base(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} ("." n=indexer_baseInt(true){ replaceName(n);})* {return productionEndTerminal("indexer_base","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo indexer_baseInt(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} {return productionEndTerminal("indexer_baseInt1","-","-","Replacement","Default",first,token);}
 |
	"this"  {return productionEndTerminal("indexer_baseInt2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo operator_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD("operator" overloadable_unary_operator() "(" type() identifier() ")") "operator" n=unary_operator_declaration(true){ replaceName(n);} {return productionEndTerminal("operator_declaration1","-","-","Replacement","Default",first,token);}
 |
	"operator" n=binary_operator_declaration(true){ replaceName(n);} {return productionEndTerminal("operator_declaration2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo unary_operator_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=overloadable_unary_operator(true){ replaceName(n);} "(" n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} ")" n=body(true){ replaceName(n);} {return productionEndTerminal("unary_operator_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo overloadable_unary_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"+"  {return productionEndTerminal("overloadable_unary_operator1","-","-","Replacement","Default",first,token);}
 |
	"-"  {return productionEndTerminal("overloadable_unary_operator2","-","-","Replacement","Default",first,token);}
 |
	"!"  {return productionEndTerminal("overloadable_unary_operator3","-","-","Replacement","Default",first,token);}
 |
	"~"  {return productionEndTerminal("overloadable_unary_operator4","-","-","Replacement","Default",first,token);}
 |
	"++"  {return productionEndTerminal("overloadable_unary_operator5","-","-","Replacement","Default",first,token);}
 |
	"--"  {return productionEndTerminal("overloadable_unary_operator6","-","-","Replacement","Default",first,token);}
 |
	"true"  {return productionEndTerminal("overloadable_unary_operator7","-","-","Replacement","Default",first,token);}
 |
	"false"  {return productionEndTerminal("overloadable_unary_operator8","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo binary_operator_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=overloadable_binary_operator(true){ replaceName(n);} "(" n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} "," n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} ")" n=body(true){ replaceName(n);} {return productionEndTerminal("binary_operator_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo overloadable_binary_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"+"  {return productionEndTerminal("overloadable_binary_operator1","-","-","Replacement","Default",first,token);}
 |
	"-"  {return productionEndTerminal("overloadable_binary_operator2","-","-","Replacement","Default",first,token);}
 |
	"*"  {return productionEndTerminal("overloadable_binary_operator3","-","-","Replacement","Default",first,token);}
 |
	"/"  {return productionEndTerminal("overloadable_binary_operator4","-","-","Replacement","Default",first,token);}
 |
	"%"  {return productionEndTerminal("overloadable_binary_operator5","-","-","Replacement","Default",first,token);}
 |
	"&"  {return productionEndTerminal("overloadable_binary_operator6","-","-","Replacement","Default",first,token);}
 |
	"|"  {return productionEndTerminal("overloadable_binary_operator7","-","-","Replacement","Default",first,token);}
 |
	"^"  {return productionEndTerminal("overloadable_binary_operator8","-","-","Replacement","Default",first,token);}
 |
	"<<"  {return productionEndTerminal("overloadable_binary_operator9","-","-","Replacement","Default",first,token);}
 |
	">>"  {return productionEndTerminal("overloadable_binary_operator10","-","-","Replacement","Default",first,token);}
 |
	"=="  {return productionEndTerminal("overloadable_binary_operator11","-","-","Replacement","Default",first,token);}
 |
	"!="  {return productionEndTerminal("overloadable_binary_operator12","-","-","Replacement","Default",first,token);}
 |
	">"  {return productionEndTerminal("overloadable_binary_operator13","-","-","Replacement","Default",first,token);}
 |
	"<"  {return productionEndTerminal("overloadable_binary_operator14","-","-","Replacement","Default",first,token);}
 |
	">="  {return productionEndTerminal("overloadable_binary_operator15","-","-","Replacement","Default",first,token);}
 |
	"<="  {return productionEndTerminal("overloadable_binary_operator16","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo conversion_operator_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=conversion_operator(true){ replaceName(n);} "operator" n=type(true){ replaceName(n);} "(" n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} ")" n=body(true){ replaceName(n);} {return productionEndTerminal("conversion_operator_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo conversion_operator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"implicit"  {return productionEndTerminal("conversion_operator1","-","-","Replacement","Default",first,token);}
 |
	"explicit"  {return productionEndTerminal("conversion_operator2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo constructor_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" [n=formal_parameter_list(true){ replaceName("formal_parameter_list", n);}{ replaceName(n);}] ")" [n=constructor_initializer(true){ replaceName(n);}] n=constructor_body(true){ replaceName(n);} {return productionEndTerminal("constructor_declaration","-","({formal_parameter_list})","Replacement","Default",first,token);}

 )  }

FSTInfo constructor_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	":" n=constructor_initializerInt(true){ replaceName(n);} "(" [n=argument_list(true){ replaceName(n);}] ")" {return productionEndTerminal("constructor_initializer","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo constructor_initializerInt(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"base"  {return productionEndTerminal("constructor_initializerInt1","-","-","Replacement","Default",first,token);}
 |
	"this"  {return productionEndTerminal("constructor_initializerInt2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo constructor_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=block(true){ replaceName(n);} {return productionEndTerminal("constructor_body","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo destructor_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"~" n=identifier(true){ replaceName(n);} "(" ")" n=body(true){ replaceName(n);} {return productionEndTerminal("destructor_declaration","~()","~()","Replacement","LineBased",first,token);}

 )  }

FSTInfo struct_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"struct" n=identifier(inTerminal){ replaceName("identifier", n);}{ replaceName(n);} [n=type_parameter_list(inTerminal){ replaceName(n);}] [n=base_interfaces(inTerminal){ replaceName(n);}] [n=type_parameter_constraint_clauses(inTerminal){ replaceName(n);}] n=class_body(inTerminal){ replaceName(n);} [";" ] {return productionEndNonTerminal("struct_declaration","{identifier}","{identifier}");}

 )  }

FSTInfo base_interfaces(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	":" n=interface_type_list(inTerminal){ replaceName(n);} {return productionEndNonTerminal("base_interfaces","-","-");}

 )  }

FSTInfo array_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" n=rest_of_array_initializer(true){ replaceName(n);} {return productionEndTerminal("array_initializer","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo rest_of_array_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"}"  {return productionEndTerminal("rest_of_array_initializer1","-","-","Replacement","Default",first,token);}
 |
	n=variable_initializer(true){ replaceName(n);} n=rest_of_array_initializerEnd(true){ replaceName(n);} {return productionEndTerminal("rest_of_array_initializer2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo rest_of_array_initializerEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"}"  {return productionEndTerminal("rest_of_array_initializerEnd1","-","-","Replacement","Default",first,token);}
 |
	"," n=rest_of_array_initializer(true){ replaceName(n);} {return productionEndTerminal("rest_of_array_initializerEnd2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"interface" n=identifier(inTerminal){ replaceName("identifier", n);}{ replaceName(n);} [n=type_parameter_list(inTerminal){ replaceName(n);}] [n=base_interfaces(inTerminal){ replaceName(n);}] [n=type_parameter_constraint_clauses(inTerminal){ replaceName(n);}] n=interface_body(inTerminal){ replaceName(n);} [";" ] {return productionEndNonTerminal("interface_declaration","{identifier}","{identifier}");}

 )  }

FSTInfo interface_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" (n=interface_member_declaration(inTerminal){ replaceName(n);})* "}" {return productionEndNonTerminal("interface_body","-","-");}

 )  }

FSTInfo interface_member_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(true){ replaceName(n);}] (n=interface_member_modifier(true){ replaceName(n);})* n=interface_member_declarationEnd(true){ replaceName("interface_member_declarationEnd", n);}{ replaceName(n);} {return productionEndTerminal("interface_member_declaration","{interface_member_declarationEnd}","{interface_member_declarationEnd}","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo interface_member_declarationEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=interface_event_declaration(true){ replaceName(n);} {return productionEndTerminal("interface_member_declarationEnd1","-","{TOSTRING}","Replacement","Default",first,token);}
 |
	n=type(true){ replaceName(n);} n=interface_member_declarationEndType(true){ replaceName(n);} {return productionEndTerminal("interface_member_declarationEnd2","-","{TOSTRING}","Replacement","Default",first,token);}

 )  }

FSTInfo interface_member_declarationEndType(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=interface_indexer_declaration(true){ replaceName(n);} {return productionEndTerminal("interface_member_declarationEndType1","-","-","Replacement","Default",first,token);}
 |
	n=identifier(true){ replaceName(n);} n=interface_member_declarationEndTypeIdentifier(true){ replaceName(n);} {return productionEndTerminal("interface_member_declarationEndType2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_member_declarationEndTypeIdentifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=interface_method_declaration(true){ replaceName(n);} {return productionEndTerminal("interface_member_declarationEndTypeIdentifier1","-","-","Replacement","Default",first,token);}
 |
	n=interface_property_declaration(true){ replaceName(n);} {return productionEndTerminal("interface_member_declarationEndTypeIdentifier2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_member_modifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"new"  {return productionEndTerminal("interface_member_modifier1","-","-","Replacement","Default",first,token);}
 |
	"unsafe"  {return productionEndTerminal("interface_member_modifier2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_event_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"event" n=type(true){ replaceName(n);} n=identifier(true){ replaceName(n);} ";" {return productionEndTerminal("interface_event_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_indexer_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"this" "[" n=formal_parameter_list(true){ replaceName(n);} "]" "{" n=interface_accessors(true){ replaceName(n);} "}" {return productionEndTerminal("interface_indexer_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_method_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=type_parameter_list(true){ replaceName(n);}] "(" [n=formal_parameter_list(true){ replaceName(n);}] ")" [n=type_parameter_constraint_clauses(true){ replaceName(n);}] ";" {return productionEndTerminal("interface_method_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_property_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" n=interface_accessors(true){ replaceName(n);} "}" {return productionEndTerminal("interface_property_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_accessors(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=interface_accessor(true){ replaceName(n);} [n=interface_accessor(true){ replaceName(n);}] {return productionEndTerminal("interface_accessors","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo interface_accessor(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(true){ replaceName(n);}] n=IDENTIFIER_CSHARP(true){ replaceName(n);} ";" {return productionEndTerminal("interface_accessor","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo enum_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"enum" n=identifier(inTerminal){ replaceName("identifier", n);}{ replaceName(n);} [n=enum_base(inTerminal){ replaceName(n);}] n=enum_body(inTerminal){ replaceName(n);} [";" ] {return productionEndNonTerminal("enum_declaration","{identifier}","{identifier}");}

 )  }

FSTInfo enum_base(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	":" n=integral_type(true){ replaceName(n);} {return productionEndTerminal("enum_base","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo enum_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"{" n=rest_of_enum_body(true){ replaceName(n);} {return productionEndTerminal("enum_body","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo rest_of_enum_body(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"}"  {return productionEndTerminal("rest_of_enum_body1","-","-","Replacement","Default",first,token);}
 |
	n=enum_member_declaration(true){ replaceName(n);} n=rest_of_enum_bodyEnd(true){ replaceName(n);} {return productionEndTerminal("rest_of_enum_body2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo rest_of_enum_bodyEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"}"  {return productionEndTerminal("rest_of_enum_bodyEnd1","-","-","Replacement","Default",first,token);}
 |
	"," n=rest_of_enum_body(true){ replaceName(n);} {return productionEndTerminal("rest_of_enum_bodyEnd2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo enum_member_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	[n=attributes(true){ replaceName(n);}] n=identifier(true){ replaceName(n);} [n=enum_member_assignment(true){ replaceName(n);}] {return productionEndTerminal("enum_member_declaration","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo enum_member_assignment(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"=" n=expression(true){ replaceName(n);} {return productionEndTerminal("enum_member_assignment","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo delegate_declaration(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"delegate" n=type(inTerminal){ replaceName(n);} n=identifier(inTerminal){ replaceName("identifier", n);}{ replaceName(n);} [n=type_parameter_list(inTerminal){ replaceName(n);}] "(" [n=formal_parameter_list(inTerminal){ replaceName(n);}] [n=type_parameter_constraint_clauses(inTerminal){ replaceName(n);}] ")" ";" {return productionEndNonTerminal("delegate_declaration","{identifier}","{identifier}");}

 )  }

FSTInfo attributes_either(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=attribute_section_start(true){ replaceName(n);})+ {return productionEndTerminal("attributes_either","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_section_start(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	LOOKAHEAD("[" ("assembly" |"module") ":") "[" n=global_attribute_target_specifier(true){ replaceName(n);} n=attribute_section(true){ replaceName(n);} {return productionEndTerminal("attribute_section_start1","-","-","Replacement","Default",first,token);}
 |
	"[" [n=attribute_target_specifier(true){ replaceName(n);}] n=attribute_section(true){ replaceName(n);} {return productionEndTerminal("attribute_section_start2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo global_attribute_target_specifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=global_attribute_target(true){ replaceName(n);} ":" {return productionEndTerminal("global_attribute_target_specifier","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo global_attribute_target(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"assembly"  {return productionEndTerminal("global_attribute_target1","-","-","Replacement","Default",first,token);}
 |
	"module"  {return productionEndTerminal("global_attribute_target2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attributes(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	(n=local_attribute(true){ replaceName(n);})+ {return productionEndTerminal("attributes","attributes","attributes","Replacement","SemanticConflict",first,token);}

 )  }

FSTInfo local_attribute(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"[" [LOOKAHEAD(2) n=attribute_target_specifier(true){ replaceName(n);}] n=attribute_section(true){ replaceName(n);} {return productionEndTerminal("local_attribute","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_section(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=attribute(true){ replaceName(n);} n=attribute_sectionEnd(true){ replaceName(n);} {return productionEndTerminal("attribute_section","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_sectionEnd(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"]"  {return productionEndTerminal("attribute_sectionEnd1","-","-","Replacement","Default",first,token);}
 |
	LOOKAHEAD(2) "," "]"  {return productionEndTerminal("attribute_sectionEnd2","-","-","Replacement","Default",first,token);}
 |
	"," n=attribute_section(true){ replaceName(n);} {return productionEndTerminal("attribute_sectionEnd3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_target_specifier(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=attribute_target(true){ replaceName(n);} n=attribute_target_specifier_mod(true){ replaceName(n);} {return productionEndTerminal("attribute_target_specifier","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_target_specifier_mod(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	":"  {return productionEndTerminal("attribute_target_specifier_mod1","-","-","Replacement","Default",first,token);}
 |
	"."  {return productionEndTerminal("attribute_target_specifier_mod2","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_target(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"event"  {return productionEndTerminal("attribute_target1","-","-","Replacement","Default",first,token);}
 |
	"return"  {return productionEndTerminal("attribute_target2","-","-","Replacement","Default",first,token);}
 |
	n=IDENTIFIER_CSHARP(true){ replaceName(n);} {return productionEndTerminal("attribute_target3","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=type_name(true){ replaceName(n);} [n=attribute_arguments(true){ replaceName(n);}] {return productionEndTerminal("attribute","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo attribute_arguments(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"(" [n=expression_list(true){ replaceName(n);}] ")" {return productionEndTerminal("attribute_arguments","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo sizeof_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"sizeof" "(" n=type(true){ replaceName(n);} ")" {return productionEndTerminal("sizeof_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo unsafe_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"unsafe" n=block(true){ replaceName(n);} {return productionEndTerminal("unsafe_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo pointer_member_access(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"->" n=IDENTIFIER_CSHARP(true){ replaceName(n);} {return productionEndTerminal("pointer_member_access","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo addressof_expression(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"&" n=unary_expression(true){ replaceName(n);} {return productionEndTerminal("addressof_expression","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_statement(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"fixed" "(" n=type(true){ replaceName(n);} n=fixed_pointer_declarators(true){ replaceName(n);} ")" n=embedded_statement(true){ replaceName(n);} {return productionEndTerminal("fixed_statement","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_pointer_declarators(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=fixed_pointer_declarator(true){ replaceName(n);} ("," n=fixed_pointer_declarator(true){ replaceName(n);})* {return productionEndTerminal("fixed_pointer_declarators","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_pointer_declarator(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	n=identifier(true){ replaceName(n);} "=" n=fixed_pointer_initializer(true){ replaceName(n);} {return productionEndTerminal("fixed_pointer_declarator","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo fixed_pointer_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	["&" ] n=expression(true){ replaceName(n);} {return productionEndTerminal("fixed_pointer_initializer","-","-","Replacement","Default",first,token);}

 )  }

FSTInfo stackalloc_initializer(boolean inTerminal) : { Token first=null,t;FSTInfo n; 
} { {first=getToken(1); productionStart(inTerminal); } (
	"stackalloc" n=non_array_type(true){ replaceName(n);} "[" n=expression(true){ replaceName(n);} "]" {return productionEndTerminal("stackalloc_initializer","-","-","Replacement","Default",first,token);}

 )  }

