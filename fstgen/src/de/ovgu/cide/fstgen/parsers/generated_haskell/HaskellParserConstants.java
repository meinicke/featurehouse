/* Generated By:JavaCC: Do not edit this line. HaskellParserConstants.java */
package de.ovgu.cide.fstgen.parsers.generated_haskell;

public interface HaskellParserConstants {

  int EOF = 0;
  int MODULE = 1;
  int WHERE = 2;
  int IMPORT = 3;
  int QUALIFIED = 4;
  int DERIVING = 5;
  int AS = 6;
  int HIDING = 7;
  int TYPE = 8;
  int DATA = 9;
  int NEWTYPE = 10;
  int CLASS = 11;
  int INSTANCE = 12;
  int DEFAULTTOKEN = 13;
  int LET = 14;
  int IN = 15;
  int DO = 16;
  int CASE = 17;
  int OF = 18;
  int IF = 19;
  int THEN = 20;
  int ELSE = 21;
  int INFIXL = 22;
  int INFIXR = 23;
  int INFIX = 24;
  int CONTEXT_ARROW = 25;
  int EQUALS = 26;
  int ALT = 27;
  int OFTYPE = 28;
  int OTHER1 = 29;
  int OTHER2 = 30;
  int OTHER3 = 31;
  int OTHER4 = 32;
  int OTHER5 = 33;
  int OTHER6 = 34;
  int OTHER7 = 35;
  int OTHER8 = 36;
  int OTHER9 = 37;
  int OTHER10 = 38;
  int OTHER11 = 39;
  int OTHER12 = 40;
  int CONSTRUCTOR_ID = 47;
  int VARIABLE_ID = 48;
  int INTEGER = 49;
  int FLOAT = 50;
  int DECIMAL = 51;
  int HEXADECIMAL = 52;
  int OCTAL = 53;
  int CHARACTER_LITERAL = 54;
  int STRING_LITERAL = 55;
  int CHARACTER_ESCAPE = 56;
  int CHAR_ESC = 57;
  int STRING_ESCAPE = 58;
  int ASCII = 59;
  int LOWER_CASE = 60;
  int UPPER_CASE = 61;
  int LETTER = 62;
  int DIGIT = 63;
  int HEXIT = 64;
  int OCTIT = 65;
  int LEFT_CURLY = 66;
  int RIGHT_CURLY = 67;
  int SEMICOLON = 68;
  int LEFT_HPAREN = 69;
  int RIGHT_HPAREN = 70;
  int LEFT_PAREN = 71;
  int RIGHT_PAREN = 72;
  int LEFT_BRACKET = 73;
  int RIGHT_BRACKET = 74;
  int COMMA = 75;
  int INFIX_QUOTE = 76;
  int VARSYM = 77;
  int CONSYM = 78;
  int SYMBOL = 79;
  int UNANTICIPATED_SYMBOL = 80;
  int ANYTHINGP = 81;

  int DEFAULT = 0;
  int PAREN = 1;

  String[] tokenImage = {
    "<EOF>",
    "\"module\"",
    "\"where\"",
    "\"import\"",
    "\"qualified\"",
    "\"deriving\"",
    "\"as\"",
    "\"hiding\"",
    "\"type\"",
    "\"data\"",
    "\"newtype\"",
    "\"class\"",
    "\"instance\"",
    "\"default\"",
    "\"let\"",
    "\"in\"",
    "\"do\"",
    "\"case\"",
    "\"of\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"infixl\"",
    "\"infixr\"",
    "\"infix\"",
    "\"=>\"",
    "\"=\"",
    "\"|\"",
    "\"::\"",
    "\".\"",
    "\"-\"",
    "\"@\"",
    "\"_\"",
    "\"~\"",
    "\":\"",
    "\"->\"",
    "\"+\"",
    "\"\\\\\"",
    "\"<-\"",
    "\"--\"",
    "\"..\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 45>",
    "<token of kind 46>",
    "<CONSTRUCTOR_ID>",
    "<VARIABLE_ID>",
    "<INTEGER>",
    "<FLOAT>",
    "<DECIMAL>",
    "<HEXADECIMAL>",
    "<OCTAL>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<CHARACTER_ESCAPE>",
    "<CHAR_ESC>",
    "<STRING_ESCAPE>",
    "\"NUL\"",
    "<LOWER_CASE>",
    "<UPPER_CASE>",
    "<LETTER>",
    "<DIGIT>",
    "<HEXIT>",
    "<OCTIT>",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"(#\"",
    "\"#)\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"`\"",
    "<VARSYM>",
    "<CONSYM>",
    "<SYMBOL>",
    "<UNANTICIPATED_SYMBOL>",
    "<ANYTHINGP>",
  };

}
